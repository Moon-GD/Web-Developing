{"id":"EX_lodash.js","dependencies":[{"name":"C:\\Users\\MoonGD\\OneDrive\\바탕 화면\\Web Developing\\프론트엔드\\practice\\package.json","includedInParent":true,"mtime":1649562018453},{"name":"lodash","loc":{"line":2,"column":14,"index":31},"parent":"C:\\Users\\MoonGD\\OneDrive\\바탕 화면\\Web Developing\\프론트엔드\\practice\\EX_lodash.js","resolved":"C:\\Users\\MoonGD\\OneDrive\\바탕 화면\\Web Developing\\프론트엔드\\practice\\node_modules\\lodash\\lodash.js"}],"generated":{"js":"\"use strict\";\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"EX_lodash.js","original":{"line":2,"column":0}}],"sources":{"EX_lodash.js":"// lodash 함수 사용\r\nimport _ from 'lodash';\r\n\r\n// 객체 데이터 A, B ,C\r\n// const userA = [\r\n//   { name:'Moon', age:25 }, \r\n//   { name:'Lee', age:23 },\r\n// ];\r\n// const userB = [\r\n//   { name:'Lee', age:23 }, \r\n//   { name:'Kim', age:20 }, \r\n// ];\r\n\r\n// 1. _.uniqby(집합처럼 만들어주고 싶은 참조형 데이터, 기준이 되는 키 값)\r\n// let userD = userA.concat(userB);\r\n// console.log('userD : ', userD);\r\n// userD = _.uniqBy(userD, 'name');\r\n// console.log('userD : (uniqby name)', userD);\r\n\r\n// 2. _.unionby(대상 객체, 기준이 되는 키 값)\r\n// let userE = _.unionBy(userA, userB, 'name');\r\n// console.log('userE : ', userE);\r\n\r\n// 3. _.find(대상 객체, 찾고자 하는 내용)\r\n// const searchResult = _.find(userD, {name:'Moon'});\r\n// console.log(searchResult);\r\n\r\n// 4. _.findIndex(대상 객체, 찾고자 하는 내용)\r\n// const index = _.findIndex(userD, searchResult);\r\n// console.log(index);\r\n\r\n// 5. _.remove(대상 객체, 지우고자 하는 내용 <일부 내용도 가능> )\r\n// _.remove(userD, {name:'Lee'});\r\n// console.log(userD);"},"lineCount":null}},"error":null,"hash":"323eac2601c1d60f20099a764f1d4450","cacheData":{"env":{}}}